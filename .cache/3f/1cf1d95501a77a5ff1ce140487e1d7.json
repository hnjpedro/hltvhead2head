{"id":"node_modules/nth-check/lib/esm/index.js","dependencies":[{"name":"/home/pedro/Área de Trabalho/practice/node_modules/nth-check/lib/esm/index.js.map","includedInParent":true,"mtime":1663823180088},{"name":"/home/pedro/Área de Trabalho/practice/package.json","includedInParent":true,"mtime":1663872581419},{"name":"/home/pedro/Área de Trabalho/practice/node_modules/nth-check/lib/esm/package.json","includedInParent":true,"mtime":1663823180072},{"name":"./parse.js","loc":{"line":1,"column":22,"index":22},"parent":"/home/pedro/Área de Trabalho/practice/node_modules/nth-check/lib/esm/index.js","resolved":"/home/pedro/Área de Trabalho/practice/node_modules/nth-check/lib/esm/parse.js"},{"name":"./compile.js","loc":{"line":2,"column":34,"index":70},"parent":"/home/pedro/Área de Trabalho/practice/node_modules/nth-check/lib/esm/index.js","resolved":"/home/pedro/Área de Trabalho/practice/node_modules/nth-check/lib/esm/compile.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"compile\", {\n  enumerable: true,\n  get: function () {\n    return _compile.compile;\n  }\n});\nexports.default = nthCheck;\nObject.defineProperty(exports, \"generate\", {\n  enumerable: true,\n  get: function () {\n    return _compile.generate;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.parse;\n  }\n});\nexports.sequence = sequence;\n\nvar _parse = require(\"./parse.js\");\n\nvar _compile = require(\"./compile.js\");\n\n/**\n * Parses and compiles a formula to a highly optimized function.\n * Combination of {@link parse} and {@link compile}.\n *\n * If the formula doesn't match any elements,\n * it returns [`boolbase`](https://github.com/fb55/boolbase)'s `falseFunc`.\n * Otherwise, a function accepting an _index_ is returned, which returns\n * whether or not the passed _index_ matches the formula.\n *\n * Note: The nth-rule starts counting at `1`, the returned function at `0`.\n *\n * @param formula The formula to compile.\n * @example\n * const check = nthCheck(\"2n+3\");\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n */\nfunction nthCheck(formula) {\n  return (0, _compile.compile)((0, _parse.parse)(formula));\n}\n/**\n * Parses and compiles a formula to a generator that produces a sequence of indices.\n * Combination of {@link parse} and {@link generate}.\n *\n * @param formula The formula to compile.\n * @returns A function that produces a sequence of indices.\n * @example <caption>Always increasing</caption>\n *\n * ```js\n * const gen = nthCheck.sequence('2n+3')\n *\n * gen() // `1`\n * gen() // `3`\n * gen() // `5`\n * gen() // `8`\n * gen() // `11`\n * ```\n *\n * @example <caption>With end value</caption>\n *\n * ```js\n *\n * const gen = nthCheck.sequence('-2n+5');\n *\n * gen() // 0\n * gen() // 2\n * gen() // 4\n * gen() // null\n * ```\n */\n\n\nfunction sequence(formula) {\n  return (0, _compile.generate)((0, _parse.parse)(formula));\n}"},"sourceMaps":{"js":{"mappings":[{"source":"index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":27,"column":0}},{"source":"index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":29,"column":0}},{"source":"index.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":31,"column":0}},{"source":"index.ts","name":null,"original":{"line":29,"column":14},"generated":{"line":54,"column":0}},{"source":"index.ts","name":null,"original":{"line":29,"column":24},"generated":{"line":54,"column":9}},{"source":"index.ts","name":null,"original":{"line":29,"column":14},"generated":{"line":54,"column":17}},{"source":"index.ts","name":null,"original":{"line":29,"column":33},"generated":{"line":54,"column":18}},{"source":"index.ts","name":null,"original":{"line":29,"column":14},"generated":{"line":54,"column":25}},{"source":"index.ts","name":null,"original":{"line":29,"column":48},"generated":{"line":54,"column":27}},{"source":"index.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":55,"column":2}},{"source":"index.ts","name":null,"original":{"line":30,"column":11},"generated":{"line":55,"column":9}},{"source":"index.ts","name":null,"original":{"line":30,"column":11},"generated":{"line":55,"column":13}},{"source":"index.ts","name":null,"original":{"line":30,"column":11},"generated":{"line":55,"column":29}},{"source":"index.ts","name":null,"original":{"line":30,"column":19},"generated":{"line":55,"column":31}},{"source":"index.ts","name":null,"original":{"line":30,"column":19},"generated":{"line":55,"column":35}},{"source":"index.ts","name":null,"original":{"line":30,"column":19},"generated":{"line":55,"column":47}},{"source":"index.ts","name":null,"original":{"line":30,"column":25},"generated":{"line":55,"column":49}},{"source":"index.ts","name":null,"original":{"line":30,"column":19},"generated":{"line":55,"column":56}},{"source":"index.ts","name":null,"original":{"line":30,"column":11},"generated":{"line":55,"column":57}},{"source":"index.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":55,"column":58}},{"source":"index.ts","name":null,"original":{"line":31,"column":1},"generated":{"line":56,"column":0}},{"source":"index.ts","name":null,"original":{"line":33,"column":0},"generated":{"line":57,"column":0}},{"source":"index.ts","name":null,"original":{"line":63,"column":6},"generated":{"line":89,"column":0}},{"source":"index.ts","name":null,"original":{"line":63,"column":16},"generated":{"line":89,"column":9}},{"source":"index.ts","name":null,"original":{"line":63,"column":6},"generated":{"line":89,"column":17}},{"source":"index.ts","name":null,"original":{"line":63,"column":25},"generated":{"line":89,"column":18}},{"source":"index.ts","name":null,"original":{"line":63,"column":6},"generated":{"line":89,"column":25}},{"source":"index.ts","name":null,"original":{"line":63,"column":40},"generated":{"line":89,"column":27}},{"source":"index.ts","name":null,"original":{"line":64,"column":4},"generated":{"line":90,"column":2}},{"source":"index.ts","name":null,"original":{"line":64,"column":11},"generated":{"line":90,"column":9}},{"source":"index.ts","name":null,"original":{"line":64,"column":11},"generated":{"line":90,"column":13}},{"source":"index.ts","name":null,"original":{"line":64,"column":11},"generated":{"line":90,"column":30}},{"source":"index.ts","name":null,"original":{"line":64,"column":20},"generated":{"line":90,"column":32}},{"source":"index.ts","name":null,"original":{"line":64,"column":20},"generated":{"line":90,"column":36}},{"source":"index.ts","name":null,"original":{"line":64,"column":20},"generated":{"line":90,"column":48}},{"source":"index.ts","name":null,"original":{"line":64,"column":26},"generated":{"line":90,"column":50}},{"source":"index.ts","name":null,"original":{"line":64,"column":20},"generated":{"line":90,"column":57}},{"source":"index.ts","name":null,"original":{"line":64,"column":11},"generated":{"line":90,"column":58}},{"source":"index.ts","name":null,"original":{"line":64,"column":4},"generated":{"line":90,"column":59}},{"source":"index.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":91,"column":0}}],"sources":{},"lineCount":null}},"error":null,"hash":"b99e80e8136645a57936f249261a56f2","cacheData":{"env":{}}}